services:
  frontend:
    build: ./frontend
    env_file:
      - ./frontend/.env
    image: ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${FRONTEND_REPO}:${TAG}
    ports:
      - "${FRONTEND_PORT:-3002}:${FRONTEND_PORT:-3002}"
    environment:
      - PORT=${FRONTEND_PORT:-3002}
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONTEND_PORT:-3002}/healthcheck"]
      timeout: 10s
      interval: 15s
      retries: 5
      start_period: 45s
    networks:
      - app-network

  backend:
    build: ./backend
    env_file:
      - ./backend/.env
    image: ${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${BACKEND_REPO}:${TAG}
    ports:
      - "${BACKEND_PORT:-4000}:${BACKEND_PORT:-4000}"
    environment:
      - NODE_ENV=production
      - PORT=${BACKEND_PORT:-4000}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-4000}/healthcheck"]
      timeout: 10s
      interval: 15s
      retries: 5
      start_period: 60s
    networks:
      - app-network

networks:
  app-network:
    driver: bridge